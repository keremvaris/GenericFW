@using GenericFW.Areas.Yonetim.GenericVM
@using System.Linq;
@model TemplateItemModel
@{
    var col = Model.CurrentColumn;
    var prop = col.Property;
    var modelData = Model.Mode == RenderMode.Create ? string.Empty : Model.Model.Data[prop.Name];

    var list = new List<SelectListItem>();


    list.AddRange(col.ManualLookup.Select(i => new SelectListItem { Text = i.Text, Value = i.Id.ToString() }));
    ViewData.TemplateInfo.HtmlFieldPrefix = "";
}

@if (Model.Mode == RenderMode.Readonly)
{
    <span>@modelData</span>
}
else if (col.Required)
{
    @Html.DropDownList(prop.Name, list, "-Seçiniz-", new Dictionary<string, object> { { "class", "span6 m-wrap popovers" },
       { "required", "required" }, { "data-val", "true" }, { "placeholder", @col.Display.Name }, {"data-trigger","hover" },
       { "data-content","Lütfen "+@col.Display.Name  +" giriniz." }, {"data-original-title", col.Display.Name },
       { "data-val-required", @col.Display.Name + " Alanı Zorunlu!" } });
    <span class="col-sm-3 control-label text-danger" data-valmsg-for="@prop.Name" data-valmsg-replace="true"></span>
}
else
{
    @Html.DropDownList(prop.Name, list, "-Seçiniz-", new Dictionary<string, object> {
           { "class" ,"span6 m-wrap popovers" },{"data-trigger","hover" },
       { "data-content","Lütfen "+@col.Display.Name  +" giriniz." }, {"data-original-title", col.Display.Name }
       });
}
